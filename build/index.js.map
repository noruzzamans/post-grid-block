{"version":3,"file":"index.js","mappings":"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;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC7BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEnDA;UACA;UACA;UACA;UACA","sources":["webpack://post-grid-block/./src/attributes.js","webpack://post-grid-block/./src/edit.js","webpack://post-grid-block/./src/icon.js","webpack://post-grid-block/./src/index.js","webpack://post-grid-block/./src/save.js","webpack://post-grid-block/./src/editor.scss","webpack://post-grid-block/./src/style.scss","webpack://post-grid-block/external window \"ReactJSXRuntime\"","webpack://post-grid-block/external window [\"wp\",\"blockEditor\"]","webpack://post-grid-block/external window [\"wp\",\"blocks\"]","webpack://post-grid-block/external window [\"wp\",\"components\"]","webpack://post-grid-block/external window [\"wp\",\"data\"]","webpack://post-grid-block/external window [\"wp\",\"i18n\"]","webpack://post-grid-block/webpack/bootstrap","webpack://post-grid-block/webpack/runtime/chunk loaded","webpack://post-grid-block/webpack/runtime/compat get default export","webpack://post-grid-block/webpack/runtime/define property getters","webpack://post-grid-block/webpack/runtime/hasOwnProperty shorthand","webpack://post-grid-block/webpack/runtime/make namespace object","webpack://post-grid-block/webpack/runtime/jsonp chunk loading","webpack://post-grid-block/webpack/before-startup","webpack://post-grid-block/webpack/startup","webpack://post-grid-block/webpack/after-startup"],"sourcesContent":["const attributes = {\r\n    blockId: {\r\n        type: \"string\",\r\n        default: \"\"\r\n    },\r\n    blockStyle: {\r\n        type: 'string',\r\n        default: ''\r\n    },\r\n    deviceType: {\r\n        type: 'string',\r\n        default: 'Desktop'\r\n    },\r\n    postType: {\r\n        type: 'string',\r\n        default: 'post',\r\n    },\r\n    postsPerPage: {\r\n        type: 'number',\r\n        default: 6,\r\n    },\r\n    orderBy: {\r\n        type: 'string',\r\n        default: 'date',\r\n    },\r\n    order: {\r\n        type: 'string',\r\n        default: 'desc',\r\n    },\r\n}\r\nexport default attributes;\r\n","import { __ } from '@wordpress/i18n';\r\nimport { \r\n    useBlockProps,\r\n    InspectorControls,\r\n} from '@wordpress/block-editor';\r\nimport { useSelect } from '@wordpress/data';\r\nimport { \r\n    PanelBody,\r\n    SelectControl,\r\n    RangeControl,\r\n} from '@wordpress/components';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport './editor.scss';\r\n\r\nexport default function Edit({ attributes, setAttributes }) {\r\n    const {\r\n        blockId,\r\n        postType,\r\n        postsPerPage,\r\n        orderBy,\r\n        order,\r\n    } = attributes;\r\n\r\n    const blockProps = useBlockProps({\r\n        className: blockId,\r\n    });\r\n\r\n    /** Start post type */\r\n    const getPostTypes = postGridBlockParams.post_types;\r\n\r\n    // Map post type keys to readable labels\r\n    const postTypes = Object.entries(getPostTypes).map(([key, label]) => ({\r\n        value: key,\r\n        label: label,\r\n    }));\r\n\r\n    // Fetch posts using useSelect\r\n    const posts = useSelect(\r\n        (select) => {\r\n            const { getEntityRecords } = select('core');\r\n            return getEntityRecords('postType', postType, {\r\n                per_page: postsPerPage,\r\n                orderby: orderBy,\r\n                order: order,\r\n            });\r\n        },\r\n        [postType, postsPerPage, orderBy, order] \r\n    );\r\n\r\n    return (\r\n        <>\r\n            <InspectorControls>\r\n                <PanelBody title={__('Post Grid Settings', 'post-grid-block')}>\r\n                    <SelectControl\r\n                        label={__('Post Type', 'post-grid-block')}\r\n                        value={postType}\r\n                        options={postTypes}\r\n                        onChange={(value) => setAttributes({ postType: value })}\r\n                    />\r\n                    <RangeControl\r\n                        label={__('Posts Per Page', 'post-grid-block')}\r\n                        value={postsPerPage}\r\n                        onChange={(value) => setAttributes({ postsPerPage: value })}\r\n                        min={1}\r\n                        max={20}\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Order By', 'post-grid-block')}\r\n                        value={orderBy}\r\n                        options={[\r\n                            { label: __('Date', 'post-grid-block'), value: 'date' },\r\n                            { label: __('Title', 'post-grid-block'), value: 'title' },\r\n                            { label: __('Random', 'post-grid-block'), value: 'rand' },\r\n                        ]}\r\n                        onChange={(value) => setAttributes({ orderBy: value })}\r\n                    />\r\n                    <SelectControl\r\n                        label={__('Order', 'post-grid-block')}\r\n                        value={order}\r\n                        options={[\r\n                            { label: __('Descending', 'post-grid-block'), value: 'desc' },\r\n                            { label: __('Ascending', 'post-grid-block'), value: 'asc' },\r\n                        ]}\r\n                        onChange={(value) => setAttributes({ order: value })}\r\n                    />\r\n                </PanelBody>\r\n            </InspectorControls>\r\n\r\n            <div {...blockProps}>\r\n                <div className=\"post-grid-block-wrapper\">\r\n                    {posts ? (\r\n                        posts.map((post) => (\r\n                            <div key={post.id} className=\"post-grid-item\">\r\n                                <div className=\"post_grid_image\">\r\n                                    {post.featured_media && post.featured_media.source_url ? (\r\n                                        <img src={post.featured_media.source_url} alt={post.title.rendered} />\r\n                                    ) : (\r\n                                        <img src=\"https://placehold.co/600x400/000000/FFFFFF/png\" alt=\"Placeholder\" />\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"post_grid_content\">\r\n                                    <a href={post.link} className=\"post_grid_link\">\r\n                                        <h3 className=\"post_grid_title\">{post.title.rendered}</h3>\r\n                                    </a>\r\n                                    <p className=\"post_grid_desc\" dangerouslySetInnerHTML={{ __html: post.excerpt.rendered }}></p>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ) : (\r\n                        <p>{__('Loading posts...', 'post-grid-block')}</p>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","export const PostGridIcon = () => {\r\n    return (\r\n        <svg fill=\"#007cba\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 128\"><title>POST GRID</title><path d=\"M102.128,96.851l6.3,14.173a1.75,1.75,0,1,0,3.2-1.422l-6.3-14.173a1.75,1.75,0,1,0-3.2,1.422Z\"/><path d=\"M123.1,120.649l-17.69-39.811a1.75,1.75,0,0,0-1.6-1.039H83.831C89.219,71.13,93.938,62,96.778,53.651a43.164,43.164,0,0,0,2.657-13.466,35.436,35.436,0,1,0-70.871,0,43.174,43.174,0,0,0,2.657,13.467c2.84,8.353,7.56,17.478,12.948,26.147H24.19a1.75,1.75,0,0,0-1.6,1.039L4.9,120.649a1.75,1.75,0,0,0,1.6,2.461h115a1.75,1.75,0,0,0,1.6-2.461ZM32.064,40.186a31.936,31.936,0,1,1,63.871,0,39.8,39.8,0,0,1-2.471,12.34c-3.041,8.945-8.311,18.822-14.24,28.026-.013.019-.025.039-.037.058A194.664,194.664,0,0,1,64,101.136,194.667,194.667,0,0,1,48.812,80.611c-.013-.02-.024-.04-.038-.059-5.929-9.2-11.2-19.081-14.239-28.025A39.812,39.812,0,0,1,32.064,40.186ZM9.192,119.61,25.327,83.3H46.4a194.324,194.324,0,0,0,16.29,21.663,1.75,1.75,0,0,0,2.629,0A194.313,194.313,0,0,0,81.6,83.3h21.068l16.135,36.311Z\"/><path d=\"M64,58.775A18.592,18.592,0,1,0,45.408,40.184,18.613,18.613,0,0,0,64,58.775Zm0-33.684A15.092,15.092,0,1,1,48.908,40.184,15.109,15.109,0,0,1,64,25.092Z\"/></svg>\r\n    );\r\n};\r\n","\r\nimport { registerBlockType } from '@wordpress/blocks';\r\nimport './style.scss';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport Edit from './edit';\r\nimport save from './save';\r\nimport metadata from './block.json';\r\nimport attributes from './attributes.js';\r\nimport { PostGridIcon } from \"./icon\";\r\n\r\nregisterBlockType( metadata.name, {\r\n\tattributes,\r\n\ticon: PostGridIcon,\r\n\tedit: Edit,\r\n\tsave,\r\n} );\r\n","import { __ } from '@wordpress/i18n';\r\nimport { useBlockProps } from '@wordpress/block-editor';\r\nexport default function save({ attributes }) {\r\n    const {\r\n        blockId,\r\n    } = attributes;\r\n\r\n    const blockProps = useBlockProps.save({\r\n        className: `${blockId}`,\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <div {...blockProps}>\r\n                <div className=\"post-grid-block-wrapper\">\r\n                    <p>Post Grid Block</p>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"index\": 0,\n\t\"./style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpost_grid_block\"] = self[\"webpackChunkpost_grid_block\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"./style-index\"], () => (__webpack_require__(\"./src/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["attributes","blockId","type","default","blockStyle","deviceType","postType","postsPerPage","orderBy","order","__","useBlockProps","InspectorControls","useSelect","PanelBody","SelectControl","RangeControl","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Edit","setAttributes","blockProps","className","getPostTypes","postGridBlockParams","post_types","postTypes","Object","entries","map","key","label","value","posts","select","getEntityRecords","per_page","orderby","children","title","options","onChange","min","max","post","featured_media","source_url","src","alt","rendered","href","link","dangerouslySetInnerHTML","__html","excerpt","id","PostGridIcon","fill","xmlns","viewBox","d","registerBlockType","save","metadata","name","icon","edit"],"sourceRoot":""}