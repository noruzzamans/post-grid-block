{"version":3,"file":"blocks/post-grid/index.js","mappings":"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","sources":["webpack://post-grid-block/./src/blocks/post-grid/attributes.js","webpack://post-grid-block/./src/blocks/post-grid/edit.js","webpack://post-grid-block/./src/blocks/post-grid/icon.js","webpack://post-grid-block/./src/blocks/post-grid/index.js","webpack://post-grid-block/./src/blocks/post-grid/save.js","webpack://post-grid-block/./src/blocks/post-grid/editor.scss","webpack://post-grid-block/./src/blocks/post-grid/style.scss","webpack://post-grid-block/external window \"ReactJSXRuntime\"","webpack://post-grid-block/external window [\"wp\",\"blockEditor\"]","webpack://post-grid-block/external window [\"wp\",\"blocks\"]","webpack://post-grid-block/external window [\"wp\",\"components\"]","webpack://post-grid-block/external window [\"wp\",\"data\"]","webpack://post-grid-block/external window [\"wp\",\"element\"]","webpack://post-grid-block/external window [\"wp\",\"i18n\"]","webpack://post-grid-block/webpack/bootstrap","webpack://post-grid-block/webpack/runtime/chunk loaded","webpack://post-grid-block/webpack/runtime/compat get default export","webpack://post-grid-block/webpack/runtime/define property getters","webpack://post-grid-block/webpack/runtime/hasOwnProperty shorthand","webpack://post-grid-block/webpack/runtime/make namespace object","webpack://post-grid-block/webpack/runtime/jsonp chunk loading","webpack://post-grid-block/webpack/before-startup","webpack://post-grid-block/webpack/startup","webpack://post-grid-block/webpack/after-startup"],"sourcesContent":["const attributes = {\r\n    blockId: {\r\n        type: \"string\",\r\n        default: \"\"\r\n    },\r\n    deviceType: {\r\n        type: 'string',\r\n        default: 'Desktop'\r\n    },\r\n    postsToShow: {\r\n        type: \"number\",\r\n        default: 4\r\n    },\r\n    columns: {\r\n        type: \"number\",\r\n        default: 3\r\n    },\r\n    categories: {\r\n        type: \"array\",\r\n        default: []\r\n    },\r\n    displayFeaturedImage: {\r\n        type: \"boolean\",\r\n        default: true\r\n    },\r\n    displayTitle: {\r\n        type: \"boolean\",\r\n        default: true\r\n    },\r\n    displayExcerpt: {\r\n        type: \"boolean\",\r\n        default: true\r\n    },\r\n    displayAuthor: {\r\n        type: \"boolean\",\r\n        default: true\r\n    },\r\n    displayDate: {\r\n        type: \"boolean\",\r\n        default: true\r\n    }\r\n}\r\nexport default attributes;\r\n","import { __ } from '@wordpress/i18n';\r\nimport { useBlockProps, InspectorControls } from '@wordpress/block-editor';\r\nimport { PanelBody, RangeControl, ToggleControl, SelectControl } from '@wordpress/components';\r\nimport { useSelect } from '@wordpress/data';\r\nimport { useState, useEffect } from '@wordpress/element';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport './editor.scss';\r\n\r\nexport default function Edit({ attributes, setAttributes }) {\r\n    const {\r\n        blockId,\r\n        postsToShow,\r\n        columns,\r\n        categories,\r\n        displayFeaturedImage,\r\n        displayTitle,\r\n        displayExcerpt,\r\n        displayAuthor,\r\n        displayDate,\r\n    } = attributes;\r\n\r\n    const [availableCategories, setAvailableCategories] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('/wp-json/wp/v2/categories')\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const categoryOptions = data.map(category => ({\r\n                    label: category.name,\r\n                    value: category.id,\r\n                }));\r\n                setAvailableCategories(categoryOptions);\r\n            });\r\n    }, []);\r\n\r\n    const posts = useSelect((select) => {\r\n        return select('core').getEntityRecords('postType', 'post', {\r\n            per_page: postsToShow,\r\n            categories: categories,\r\n        });\r\n    }, [postsToShow, categories]);\r\n\r\n    const blockProps = useBlockProps({\r\n        className: `post-grid-block ${blockId}`,\r\n    });\r\n\r\n    return (\r\n        <>\r\n            <InspectorControls>\r\n                <PanelBody title={__('Post Grid Settings', 'your-text-domain')}>\r\n                    <RangeControl\r\n                        label={__('Number of posts', 'your-text-domain')}\r\n                        value={postsToShow}\r\n                        onChange={(value) => setAttributes({ postsToShow: value })}\r\n                        min={1}\r\n                        max={20}\r\n                    />\r\n                    <RangeControl\r\n                        label={__('Columns', 'your-text-domain')}\r\n                        value={columns}\r\n                        onChange={(value) => setAttributes({ columns: value })}\r\n                        min={1}\r\n                        max={6}\r\n                    />\r\n                    <SelectControl\r\n                        multiple\r\n                        label={__('Categories', 'your-text-domain')}\r\n                        value={categories}\r\n                        options={availableCategories}\r\n                        onChange={(value) => setAttributes({ categories: value })}\r\n                    />\r\n                    <ToggleControl\r\n                        label={__('Display Featured Image', 'your-text-domain')}\r\n                        checked={displayFeaturedImage}\r\n                        onChange={() => setAttributes({ displayFeaturedImage: !displayFeaturedImage })}\r\n                    />\r\n                    <ToggleControl\r\n                        label={__('Display Title', 'your-text-domain')}\r\n                        checked={displayTitle}\r\n                        onChange={() => setAttributes({ displayTitle: !displayTitle })}\r\n                    />\r\n                    <ToggleControl\r\n                        label={__('Display Excerpt', 'your-text-domain')}\r\n                        checked={displayExcerpt}\r\n                        onChange={() => setAttributes({ displayExcerpt: !displayExcerpt })}\r\n                    />\r\n                    <ToggleControl\r\n                        label={__('Display Author', 'your-text-domain')}\r\n                        checked={displayAuthor}\r\n                        onChange={() => setAttributes({ displayAuthor: !displayAuthor })}\r\n                    />\r\n                    <ToggleControl\r\n                        label={__('Display Date', 'your-text-domain')}\r\n                        checked={displayDate}\r\n                        onChange={() => setAttributes({ displayDate: !displayDate })}\r\n                    />\r\n                </PanelBody>\r\n            </InspectorControls>\r\n            <div {...blockProps}>\r\n                <div className=\"post-grid-block-wrapper\" style={{ gridTemplateColumns: `repeat(${columns}, 1fr)` }}>\r\n                    {posts && posts.map((post) => (\r\n                        <div key={post.id} className=\"post-grid-item\">\r\n                            {displayFeaturedImage && post.featured_media && (\r\n                                <img src={post.featured_media_src_url} alt={post.title.rendered} />\r\n                            )}\r\n                            {displayTitle && (\r\n                                <h3>{post.title.rendered}</h3>\r\n                            )}\r\n                            {displayExcerpt && (\r\n                                <div dangerouslySetInnerHTML={{ __html: post.excerpt.rendered }} />\r\n                            )}\r\n                            {displayAuthor && (\r\n                                <p className=\"post-author\">{__('By', 'your-text-domain')} {post.author_name}</p>\r\n                            )}\r\n                            {displayDate && (\r\n                                <p className=\"post-date\">{new Date(post.date).toLocaleDateString()}</p>\r\n                            )}\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","export const PostGridIcon = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"#007cba\">\r\n            <path d=\"M3 3v18h18V3H3zm2 2h14v4H5V5zm0 6h4v4H5v-4zm6 0h4v4h-4v-4zm6 0h4v4h-4v-4zm-12 6h4v4H5v-4zm6 0h4v4h-4v-4zm6 0h4v4h-4v-4z\"/>\r\n        </svg>\r\n    );\r\n};\r\n","\r\nimport { registerBlockType } from '@wordpress/blocks';\r\nimport './style.scss';\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport Edit from './edit';\r\nimport save from './save';\r\nimport metadata from './block.json';\r\nimport attributes from './attributes.js';\r\nimport { PostGridIcon } from \"./icon\";\r\n\r\nregisterBlockType( metadata.name, {\r\n\tattributes,\r\n\ticon: PostGridIcon,\r\n\tedit: Edit,\r\n\tsave,\r\n} );\r\n","import { useBlockProps } from '@wordpress/block-editor';\r\n\r\nexport default function save({ attributes }) {\r\n    const {\r\n        blockId,\r\n        columns,\r\n        postsToShow,\r\n        categories,\r\n        displayFeaturedImage,\r\n        displayTitle,\r\n        displayExcerpt,\r\n        displayAuthor,\r\n        displayDate,\r\n    } = attributes;\r\n\r\n    const blockProps = useBlockProps.save({\r\n        className: `post-grid-block ${blockId}`,\r\n    });\r\n\r\n    return (\r\n        <div {...blockProps}>\r\n            <div \r\n                className=\"post-grid-block-wrapper\" \r\n                style={{ gridTemplateColumns: `repeat(${columns}, 1fr)` }}\r\n                data-posts-to-show={postsToShow}\r\n                data-categories={JSON.stringify(categories)}\r\n                data-display-featured-image={displayFeaturedImage}\r\n                data-display-title={displayTitle}\r\n                data-display-excerpt={displayExcerpt}\r\n                data-display-author={displayAuthor}\r\n                data-display-date={displayDate}\r\n            >\r\n                {/* The content will be dynamically generated on the frontend */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"ReactJSXRuntime\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"blocks/post-grid/index\": 0,\n\t\"blocks/post-grid/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkpost_grid_block\"] = self[\"webpackChunkpost_grid_block\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"blocks/post-grid/style-index\"], () => (__webpack_require__(\"./src/blocks/post-grid/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["attributes","blockId","type","default","deviceType","postsToShow","columns","categories","displayFeaturedImage","displayTitle","displayExcerpt","displayAuthor","displayDate","__","useBlockProps","InspectorControls","PanelBody","RangeControl","ToggleControl","SelectControl","useSelect","useState","useEffect","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Edit","setAttributes","availableCategories","setAvailableCategories","fetch","then","response","json","data","categoryOptions","map","category","label","name","value","id","posts","select","getEntityRecords","per_page","blockProps","className","children","title","onChange","min","max","multiple","options","checked","style","gridTemplateColumns","post","featured_media","src","featured_media_src_url","alt","rendered","dangerouslySetInnerHTML","__html","excerpt","author_name","Date","date","toLocaleDateString","PostGridIcon","xmlns","viewBox","fill","d","registerBlockType","save","metadata","icon","edit","JSON","stringify"],"sourceRoot":""}